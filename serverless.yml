console: true
org: tonyhsieh
app: aws-api
service: aws-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  environment:
    DYNAMODB_MOJO_TABLE: ${self:service}-mojoTable-${sls:stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:Get*"
        - "dynamodb:Scan*"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-mojoTable-${sls:stage}

package:
  excludeDevDependencies: true  
  exclude:
    - node_modules/**
    - venv/**

functions:
  getMojo: 
    handler: getMojo.getMojo
    events:
      - httpApi:
          path: /mojo/{id}
          method: get
  createMojo:
    handler: createMojo.createMojo
    events:
      - httpApi:
          path: /
          method: post
  getInventory:
    handler: getInventory.getInventory
    events:
      - httpApi: 
          path: /inventory/{walletAddr}
          method: get 
  sproutMojo:
    handler: sproutMojo.sproutMojo
    events:
      - httpApi:
          path: /mojo/{ id }/sprout/{ signedMessage }
          method: put 
  getMojos:
    handler: getMojos.getMojos
    events: 
      - httpApi:
          path: /
          method: get


resources:
  Resources:
    MojoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: uuid
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: uuid
            KeyType: HASH
        TableName: ${self:service}-mojoTable-${sls:stage}

plugins:
  - serverless-offline
  - serverless-plugin-include-dependencies
  - serverless-dotenv-plugin
